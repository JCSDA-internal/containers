# ch-test-scope: full
FROM jcsda/docker_base-intel-impi:latest
LABEL maintainer "Mark Miesch <miesch@ucar.edu>"

#-------------------------------------------------------------
# From Intel's os-tools-ubuntu20 Dockerfile
# Copyright (c) 2019-2020 Intel Corporation.
# SPDX-License-Identifier: BSD-3-Clause

ARG DEBIAN_FRONTEND=noninteractive
ARG APT_KEY_DONT_WARN_ON_DANGEROUS_USAGE=1

# install OS tools
RUN apt-get update -y && \
    apt-get install -y --no-install-recommends -o=Dpkg::Use-Pty=0 \
    # make
    build-essential \
    # library helper
    pkg-config \
    cmake \
    ca-certificates \
    gnupg

# add apt repo public key
ARG url=https://apt.repos.intel.com/intel-gpg-keys/GPG-PUB-KEY-INTEL-SW-PRODUCTS-2023.PUB
ADD $url /
RUN file=$(basename "$url") && \
    apt-key add "$file" && \
    rm "$file"

# configure the repository
ARG apt_repo=https://apt.repos.intel.com/oneapi
RUN echo "deb $apt_repo all main" > /etc/apt/sources.list.d/oneAPI.list

#-------------------------------------------------------------
# From Intel's os-tools-ubuntu20 Dockerfile
# Copyright (c) 2019-2020 Intel Corporation.
# SPDX-License-Identifier: BSD-3-Clause

# requires oneapi-basekit image, assumes oneapi apt repo is configured
# install Intel(R) oneAPI HPC Toolkit
RUN apt-get update -y && \
    apt-get install -y --no-install-recommends -o=Dpkg::Use-Pty=0 \
    intel-hpckit-getting-started \
    intel-oneapi-clck \
    intel-oneapi-common-licensing \
    intel-oneapi-common-vars \
    intel-oneapi-dev-utilities \
    intel-oneapi-dpcpp-cpp-compiler-pro \
    intel-oneapi-ifort \
    intel-oneapi-inspector \
    intel-oneapi-itac \
    intel-oneapi-mpi-devel \
    intel-oneapi-mkl-devel \
    --

RUN echo "if [ -z \"$INTEL_SH_GUARD\" ]; then" > /etc/profile.d/intel.sh \
    && echo "    source /opt/intel/oneapi/setvars.sh -i_mpi_library_kind=release_mt" >> /etc/profile.d/intel.sh \
    && echo "fi" >> /etc/profile.d/intel.sh \
    && echo "export INTEL_SH_GUARD=1" >> /etc/profile.d/intel.sh \
    && chmod a+x /etc/profile.d/intel.sh

#-------------------------------------------------------------
# From Intel's os-tools-ubuntu20 Dockerfile
# Charliecloud does not modify the environment variables.  So, to set
# environment variables we need to put them in an initialization script
RUN echo 'export LD_LIBRARY_PATH=/usr/local/lib' >> /etc/bash.bashrc && \
    echo 'export PATH=/usr/local/mpich/bin:$PATH' >> /etc/bash.bashrc && \
    echo 'export NETCDF=/usr/local' >> /etc/bash.bashrc && \
    echo 'export PNETCDF=/usr/local' >> /etc/bash.bashrc && \
    echo 'export PIO=/usr/local' >> /etc/bash.bashrc && \
    echo 'export BOOST_ROOT=/usr/local' >> /etc/bash.bashrc && \
    echo 'export EIGEN3_INCLUDE_DIR=/usr/local' >> /etc/bash.bashrc && \
    echo 'export PYTHONPATH=/usr/local/lib:$PYTHONPATH' >> /etc/bash.bashrc && \
    echo 'export FC=mpiifort' >> /etc/bash.bashrc && \
    echo 'export CC=mpiicc' >> /etc/bash.bashrc && \
    echo 'export CXX=mpiicpc' >> /etc/bash.bashrc
