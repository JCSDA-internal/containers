BootStrap: docker
From: ubuntu:16.04
%post -c /bin/bash
    . /.singularity.d/env/10-docker*.sh

%post -c /bin/bash
    apt-get update -y
    DEBIAN_FRONTEND=noninteractive apt-get install -y --no-install-recommends \
        bc \
        bison \
        build-essential \
        csh \
        curl \
        file \
        flex \
        ksh \
        less \
        libcurl4-openssl-dev \
        libexpat1-dev \
        libgtk2.0-common \
        libncurses-dev \
        libssl-dev \
        libx11-dev \
        libxml2-dev \
        lsb-release \
        man-db \
        nano \
        openssh-server \
        screen \
        software-properties-common \
        swig \
        tcl \
        tcsh \
        tk \
        unzip \
        wget \
        wish
    rm -rf /var/lib/apt/lists/*

%post -c /bin/bash
    apt-get update -y
    DEBIAN_FRONTEND=noninteractive apt-get install -y --no-install-recommends \
        libpmi0 \
        libpmi0-dbg \
        libpmi0-dev
    rm -rf /var/lib/apt/lists/*

# Intel Parallel Studio XE
%post -c /bin/bash
    apt-get update -y
    DEBIAN_FRONTEND=noninteractive apt-get install -y --no-install-recommends \
        build-essential \
        cpio
    rm -rf /var/lib/apt/lists/*
%files
    intel_tarballs/parallel_studio_xe_2017_update1.tgz /var/tmp/parallel_studio_xe_2017_update1.tgz
%files
    intel_license/COM_L___LXMW-67CW6CHW.lic /var/tmp/license.lic
%post -c /bin/bash
    cd /
    mkdir -p /var/tmp && tar -x -f /var/tmp/parallel_studio_xe_2017_update1.tgz -C /var/tmp -z
    sed -i -e 's/^#\?\(COMPONENTS\)=.*/\1=intel-icc-l-all__x86_64;intel-ifort-l-ps__x86_64;intel-mkl__x86_64;intel-mkl-rt__x86_64;intel-mkl-ps-rt-jp__x86_64;intel-mkl-ps-cluster-64bit__x86_64;intel-mkl-ps-cluster-rt__x86_64;intel-mkl-ps-common-64bit__x86_64;intel-mkl-common-c-64bit__x86_64;intel-mkl-gnu__x86_64;intel-mkl-gnu-c__x86_64;intel-mkl-gnu-rt__x86_64;intel-mkl-ps-common-f-64bit__x86_64;intel-mkl-ps-gnu-f-rt__x86_64;intel-mkl-ps-gnu-f__x86_64;intel-mkl-ps-f__x86_64;intel-mpirt-l-ps-wrapper__x86_64;intel-mpi-rt-core__x86_64;intel-mpi-sdk-core__x86_64;intel-mpi-doc__x86_64;intel-mpi-psxe__x86_64;intel-mpi-rt-psxe__x86_64;intel-ccompxe__noarch;intel-fcompxe__noarch/g' \
        -e 's|^#\?\(PSET_INSTALL_DIR\)=.*|\1=/opt/intel|g' \
        -e 's/^#\?\(ACCEPT_EULA\)=.*/\1=accept/g' \
        -e 's/^#\?\(ACTIVATION_TYPE\)=.*/\1=license_file/g' \
        -e 's|^#\?\(ACTIVATION_LICENSE_FILE\)=.*|\1=/var/tmp/license.lic|g' /var/tmp/parallel_studio_xe_2017_update1/silent.cfg
    cd /var/tmp/parallel_studio_xe_2017_update1 && ./install.sh --silent=silent.cfg
    rm -rf /var/tmp/parallel_studio_xe_2017_update1.tgz /var/tmp/parallel_studio_xe_2017_update1
%post -c /bin/bash
    cd /
    echo "source /opt/intel/compilers_and_libraries/linux/bin/compilervars.sh intel64" >> /etc/bash.bashrc

# CMake version 3.13.0
%post -c /bin/bash
    apt-get update -y
    DEBIAN_FRONTEND=noninteractive apt-get install -y --no-install-recommends \
        wget
    rm -rf /var/lib/apt/lists/*
%post -c /bin/bash
    cd /
    mkdir -p /var/tmp && wget -q -nc --no-check-certificate -P /var/tmp https://cmake.org/files/v3.13/cmake-3.13.0-Linux-x86_64.sh
    /bin/sh /var/tmp/cmake-3.13.0-Linux-x86_64.sh --prefix=/usr/local --skip-license
    rm -rf /var/tmp/cmake-3.13.0-Linux-x86_64.sh

%post -c /bin/bash
    apt-get update -y
    DEBIAN_FRONTEND=noninteractive apt-get install -y --no-install-recommends \
        doxygen \
        emacs \
        git \
        git-flow \
        graphviz \
        lynx \
        nedit \
        texinfo \
        texlive-latex-recommended \
        vim
    rm -rf /var/lib/apt/lists/*

%post -c /bin/bash
    cd /
    add-apt-repository ppa:git-core/ppa
    curl -s https://packagecloud.io/install/repositories/github/git-lfs/script.deb.sh | bash
    apt-get update
    apt-get install -y --no-install-recommends git-lfs
    git lfs install

%post -c /bin/bash
    apt-get update -y
    DEBIAN_FRONTEND=noninteractive apt-get install -y --no-install-recommends \
        python3-dev \
        python3-pip \
        python3-scipy \
        python3-yaml
    rm -rf /var/lib/apt/lists/*

%post -c /bin/bash
    cd /
    ln -s /usr/bin/python3 /usr/bin/python

%post -c /bin/bash
    cd /
    apt-get update
    DEBIAN_FRONTEND=noninteractive apt-get install -y tzdata locales
    ln -fs /usr/share/zoneinfo/America/Denver /etc/localtime
    locale-gen --purge en_US.UTF-8
    dpkg-reconfigure --frontend noninteractive tzdata
    dpkg-reconfigure --frontend=noninteractive locales
    update-locale "LANG=en_US.UTF-8"
    update-locale "LANGUAGE=en_US:en"

%environment
    export LANG=en_US.UTF-8
    export LANGUAGE=en_US:en
%post -c /bin/bash
    export LANG=en_US.UTF-8
    export LANGUAGE=en_US:en

%environment
    export BOOST_ROOT=/usr/local
    export CC=mpiicc
    export CXX=mpiicpc
    export EIGEN3_INCLUDE_DIR=/usr/local
    export FC=mpiifort
    export HDF5_ROOT=/usr/local
    export MPI_CC=mpiicc
    export MPI_CXX=mpiicpc
    export MPI_FC=mpiifort
    export NETCDF=/usr/local
    export NETCDF_ROOT=/usr/local
    export PIO=/usr/local
    export PNETCDF=/usr/local
    export SERIAL_CC=icc
    export SERIAL_CXX=icpc
    export SERIAL_FC=ifort
%post -c /bin/bash
    export BOOST_ROOT=/usr/local
    export CC=mpiicc
    export CXX=mpiicpc
    export EIGEN3_INCLUDE_DIR=/usr/local
    export FC=mpiifort
    export HDF5_ROOT=/usr/local
    export MPI_CC=mpiicc
    export MPI_CXX=mpiicpc
    export MPI_FC=mpiifort
    export NETCDF=/usr/local
    export NETCDF_ROOT=/usr/local
    export PIO=/usr/local
    export PNETCDF=/usr/local
    export SERIAL_CC=icc
    export SERIAL_CXX=icpc
    export SERIAL_FC=ifort

%post -c /bin/bash
    cd /
    cd /root
    git clone https://github.com/jcsda/jedi-stack.git
    cd jedi-stack/buildscripts
    git checkout bugfix/intel17-container
    ./build_stack.sh "container-intel-impi-dev"
    mv ../jedi-stack-contents.log /etc
    chmod a+r /etc/jedi-stack-contents.log
    rm -rf /root/jedi-stack
    rm -rf /var/lib/apt/lists/*
    mkdir /worktmp

%post -c /bin/bash
    cd /
    useradd -U -k /etc/skel -s /bin/bash -d /home/jedi -m jedi
    echo "export FC=mpiifort" >> /etc/bash.bashrc
    echo "export CC=mpiicc" >> /etc/bash.bashrc
    echo "export CXX=mpiicpc" >> /etc/bash.bashrc
    echo "export PATH=/usr/local/bin:$PATH" >> /etc/bash.bashrc
    echo "export LD_LIBRARY_PATH=/opt/intel/compilers_and_libraries_2017.1.132/linux/compiler/lib/intel64:/usr/local/lib:$LD_LIBRARY_PATH" >> /etc/bash.bashrc
    echo "export LIBRARY_PATH=/usr/local/lib:$LIBRARY_PATH" >> /etc/bash.bashrc
    echo "export PYTHONPATH=/opt/intel/compilers_and_libraries_2017.1.132/linux/compiler/lib/intel64:/usr/local/lib:$PYTHONPATH" >> /etc/bash.bashrc
    echo "source /opt/intel/compilers_and_libraries/linux/bin/compilervars.sh intel64" >> /etc/bash.bashrc
    echo "export I_MPI_SHM_LMT=shm" >> /etc/bash.bashrc
    echo "[credential]\n    helper = cache --timeout=7200" >> ~jedi/.gitconfig
    chown -R jedi:jedi ~jedi/.gitconfig

%environment
    export CC=mpiicc
    export CXX=mpiicpc
    export FC=mpiifort
%post -c /bin/bash
    export CC=mpiicc
    export CXX=mpiicpc
    export FC=mpiifort

%files
    ssh-key/github_academy_rsa /root/github_academy_rsa

%post -c /bin/bash
    cd /
    mkdir -p /root/.ssh
    mv /root/github_academy_rsa /root/.ssh/github_academy_rsa
    eval "$(ssh-agent -s)"
    source /opt/intel/compilers_and_libraries/linux/bin/compilervars.sh intel64
    ssh-add /root/.ssh/github_academy_rsa
    ssh -T -o "StrictHostKeyChecking=no" git@github.com; mkdir -p /root/jedi
    cd /root/jedi
    git clone git@github.com:jcsda/odc.git
    cd odc && git checkout develop
    mkdir -p build && cd build
    ecbuild --build=Release -DCMAKE_INSTALL_PREFIX="/usr/local" ..
    make -j4
    make install
    echo "odc jcsda-develop" >> /etc/jedi-stack-contents.log
    cd /root/jedi
    git clone git@github.com:jcsda/odyssey.git
    cd odyssey && git checkout develop
    mkdir -p build && cd build
    ecbuild --build=Release -DCMAKE_INSTALL_PREFIX="/usr/local" ..
    make -j4 && make install
    echo "odyssey jcsda-develop" >> /etc/jedi-stack-contents.log
    rm -rf /root/jedi/odc
    rm -rf /root/jedi/odyssey
    rm /root/.ssh/github_academy_rsa

%environment
    export I_MPI_PMI_LIBRARY=/usr/lib/x86_64-linux-gnu/libpmi.so
    export I_MPI_ROOT=/opt/intel/compilers_and_libraries_2017.1.132/linux/mpi
    export I_MPI_SHM_LMT=shm
    export LD_LIBRARY_PATH=/opt/intel/compilers_and_libraries_2017.1.132/linux/compiler/lib/intel64:/opt/intel/compilers_and_libraries_2017.1.132/linux/compiler/lib/intel64_lin:/opt/intel/compilers_and_libraries_2017.1.132/linux/mpi/intel64/lib:/opt/intel/compilers_and_libraries_2017.1.132/linux/mpi/mic/lib:/opt/intel/compilers_and_libraries_2017.1.132/linux/compiler/lib/intel64_lin:/opt/intel/compilers_and_libraries_2017.1.132/linux/mkl/lib/intel64_lin:/opt/intel/compilers_and_libraries_2017.1.132/linux/compiler/lib/intel64:/usr/local/lib:
    export PATH=/opt/intel/compilers_and_libraries_2017.1.132/linux/bin/intel64:/opt/intel/compilers_and_libraries_2017.1.132/linux/mpi/intel64/bin:/usr/local/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin
%post -c /bin/bash
    export I_MPI_PMI_LIBRARY=/usr/lib/x86_64-linux-gnu/libpmi.so
    export I_MPI_ROOT=/opt/intel/compilers_and_libraries_2017.1.132/linux/mpi
    export I_MPI_SHM_LMT=shm
    export LD_LIBRARY_PATH=/opt/intel/compilers_and_libraries_2017.1.132/linux/compiler/lib/intel64:/opt/intel/compilers_and_libraries_2017.1.132/linux/compiler/lib/intel64_lin:/opt/intel/compilers_and_libraries_2017.1.132/linux/mpi/intel64/lib:/opt/intel/compilers_and_libraries_2017.1.132/linux/mpi/mic/lib:/opt/intel/compilers_and_libraries_2017.1.132/linux/compiler/lib/intel64_lin:/opt/intel/compilers_and_libraries_2017.1.132/linux/mkl/lib/intel64_lin:/opt/intel/compilers_and_libraries_2017.1.132/linux/compiler/lib/intel64:/usr/local/lib:
    export PATH=/opt/intel/compilers_and_libraries_2017.1.132/linux/bin/intel64:/opt/intel/compilers_and_libraries_2017.1.132/linux/mpi/intel64/bin:/usr/local/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin

%runscript
    exec /bin/bash -l "$@"


