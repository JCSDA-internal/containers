FROM ubuntu:18.04 AS build

RUN apt-get update -y && \
    DEBIAN_FRONTEND=noninteractive apt-get install -y --no-install-recommends \
        apt-utils \
        build-essential \
        gnupg2 && \
    rm -rf /var/lib/apt/lists/*

RUN apt-key adv --keyserver keyserver.ubuntu.com --recv-keys 6B05F25D762E3157 && \
    apt-get update

RUN apt-get update -y && \
    DEBIAN_FRONTEND=noninteractive apt-get install -y --no-install-recommends \
        bc \
        bison \
        csh \
        curl \
        dirmngr \
        doxygen \
        emacs \
        file \
        flex \
        git \
        git \
        git-flow \
        graphviz \
        ksh \
        less \
        libasound2 \
        libcurl4-openssl-dev \
        libexpat1-dev \
        libgtk2.0-common \
        libncurses-dev \
        libpango-1.0.0 \
        libssl-dev \
        libx11-dev \
        libxml2-dev \
        lsb-release \
        lynx \
        man-db \
        nano \
        nedit \
        openssh-server \
        screen \
        software-properties-common \
        swig \
        tcl \
        tcsh \
        texinfo \
        texlive-latex-recommended \
        tk \
        unzip \
        vim \
        wget \
        wish \
        xserver-xorg && \
    rm -rf /var/lib/apt/lists/*

# Intel Parallel Studio XE
RUN apt-get update -y && \
    DEBIAN_FRONTEND=noninteractive apt-get install -y --no-install-recommends \
        build-essential \
        cpio && \
    rm -rf /var/lib/apt/lists/*
COPY intel_tarballs/parallel_studio_xe_2019_update5_cluster_edition.tgz /var/tmp/parallel_studio_xe_2019_update5_cluster_edition.tgz
COPY ../intel_license/COM_L___LXMW-67CW6CHW.lic /var/tmp/license.lic
RUN mkdir -p /var/tmp && tar -x -f /var/tmp/parallel_studio_xe_2019_update5_cluster_edition.tgz -C /var/tmp -z && \
    sed -i -e 's/^#\?\(COMPONENTS\)=.*/\1=DEFAULTS/g' \
        -e 's|^#\?\(PSET_INSTALL_DIR\)=.*|\1=/opt/intel|g' \
        -e 's/^#\?\(ACCEPT_EULA\)=.*/\1=accept/g' \
        -e 's/^#\?\(ACTIVATION_TYPE\)=.*/\1=license_file/g' \
        -e 's|^#\?\(ACTIVATION_LICENSE_FILE\)=.*|\1=/var/tmp/license.lic|g' /var/tmp/parallel_studio_xe_2019_update5_cluster_edition/silent.cfg && \
    cd /var/tmp/parallel_studio_xe_2019_update5_cluster_edition && ./install.sh --silent=silent.cfg && \
    rm -rf /var/tmp/parallel_studio_xe_2019_update5_cluster_edition.tgz /var/tmp/parallel_studio_xe_2019_update5_cluster_edition
RUN echo "source /opt/intel/compilers_and_libraries/linux/bin/compilervars.sh intel64" >> /etc/bash.bashrc

# CMake version 3.17.2
RUN apt-get update -y && \
    DEBIAN_FRONTEND=noninteractive apt-get install -y --no-install-recommends \
        make \
        wget && \
    rm -rf /var/lib/apt/lists/*
RUN mkdir -p /var/tmp && wget -q -nc --no-check-certificate -P /var/tmp https://cmake.org/files/v3.17/cmake-3.17.2-Linux-x86_64.sh && \
    mkdir -p /usr/local && \
    /bin/sh /var/tmp/cmake-3.17.2-Linux-x86_64.sh --prefix=/usr/local --skip-license && \
    rm -rf /var/tmp/cmake-3.17.2-Linux-x86_64.sh
ENV PATH=/usr/local/bin:$PATH

RUN curl -s https://packagecloud.io/install/repositories/github/git-lfs/script.deb.sh | bash && \
    apt-get update && \
    apt-get install -y --no-install-recommends git-lfs && \
    git lfs install

RUN apt-get update -y && \
    DEBIAN_FRONTEND=noninteractive apt-get install -y --no-install-recommends \
        python3-dev \
        python3-pip \
        python3-scipy \
        python3-yaml && \
    rm -rf /var/lib/apt/lists/*

RUN ln -s /usr/bin/python3 /usr/bin/python

RUN apt-get update && \
    DEBIAN_FRONTEND=noninteractive apt-get install -y tzdata locales && \
    ln -fs /usr/share/zoneinfo/America/Denver /etc/localtime && \
    locale-gen --purge en_US.UTF-8 && \
    dpkg-reconfigure --frontend noninteractive tzdata && \
    dpkg-reconfigure --frontend=noninteractive locales && \
    update-locale "LANG=en_US.UTF-8" && \
    update-locale "LANGUAGE=en_US:en"

ENV LANG=en_US.UTF-8 \
    LANGUAGE=en_US:en

ENV BOOST_ROOT=/opt/jedi \
    CC=mpiicc \
    CXX=mpiicpc \
    EIGEN3_INCLUDE_DIR=/opt/jedi/include \
    FC=mpiifort \
    HDF5_ROOT=/opt/jedi \
    LD_LIBRARY_PATH=/opt/jedi/lib:$LD_LIBRARY_PATH \
    LIBRARY_PATH=/opt/jedi/lib:$LIBRARY_PATH \
    MPI_CC=mpiicc \
    MPI_CXX=mpiicpc \
    MPI_FC=mpiifort \
    NETCDF=/opt/jedi \
    NETCDF_ROOT=/opt/jedi \
    PATH=/opt/jedi/bin:$PATH \
    PIO=/opt/jedi \
    PNETCDF=/opt/jedi \
    SERIAL_CC=icc \
    SERIAL_CXX=icpc \
    SERIAL_FC=ifort

RUN cd /root && \
    git clone https://github.com/jcsda/jedi-stack.git && \
    cd jedi-stack/buildscripts && \
    git checkout develop && \
    ./build_stack.sh "container-intel-impi-app" && \
    mv ../jedi-stack-contents.log /etc && \
    chmod a+r /etc/jedi-stack-contents.log && \
    rm -rf /root/jedi-stack && \
    rm -rf /var/lib/apt/lists/* && \
    mkdir /worktmp

RUN echo "export FC=mpiifort" >> /etc/bash.bashrc && \
    echo "export CC=mpiicc" >> /etc/bash.bashrc && \
    echo "export CXX=mpiicpc" >> /etc/bash.bashrc && \
    echo "export PATH=/usr/local/bin:/opt/jedi/bin:$PATH" >> /etc/bash.bashrc && \
    echo "export LD_LIBRARY_PATH=/usr/local/lib:/opt/jedi/lib:$LD_LIBRARY_PATH" >> /etc/bash.bashrc && \
    echo "export LIBRARY_PATH=/usr/local/lib:/opt/jedi/lib:$LIBRARY_PATH" >> /etc/bash.bashrc && \
    echo "export CPATH=/usr/local/include:/opt/jedi/include:$CPATH" >> /etc/bash.bashrc && \
    echo "export PYTHONPATH=/usr/local/lib:$PYTHONPATH" >> /etc/bash.bashrc

ENV LD_LIBRARY_PATH=/opt/intel/compilers_and_libraries_2019/linux/lib/intel64_lin:/usr/local/lib:/opt/jedi/lib

COPY ssh-key/github_academy_rsa /root/github_academy_rsa

RUN DOCKERSHELL BASH

RUN source /opt/intel/compilers_and_libraries/linux/bin/compilervars.sh intel64 && \
    mkdir -p /root/.ssh && \
    mv /root/github_academy_rsa /root/.ssh/github_academy_rsa && \
    eval "$(ssh-agent -s)" && \
    ssh-add /root/.ssh/github_academy_rsa && \
    export CC=mpiicc && \
    export CXX=mpiicpc && \
    export FC=mpiifort && \
    ssh -T -o "StrictHostKeyChecking=no" git@github.com; mkdir -p /opt/jedi/fv3-bundle && \
    cd /opt/jedi/fv3-bundle && \
    git clone git@github.com:jcsda/fv3-bundle.git && \
    cd /opt/jedi/fv3-bundle/fv3-bundle && \
    git clone git@github.com:jcsda/fckit.git -b develop && \
    git clone git@github.com:jcsda/atlas.git -b develop && \
    git clone git@github.com:jcsda/crtm.git -b develop && \
    git clone git@github.com:jcsda/saber.git -b develop && \
    git clone git@github.com:jcsda/oops.git -b develop && \
    git clone git@github.com:jcsda/ioda.git -b develop && \
    git clone git@github.com:jcsda/ufo.git -b develop && \
    git clone git@github.com:jcsda/fms.git -b dev/master-ecbuild && \
    git clone git@github.com:jcsda/femps.git -b develop && \
    git clone git@github.com:jcsda/fv3-jedi-linearmodel.git -b develop fv3-jedi-lm && \
    git clone git@github.com:jcsda/fv3-jedi.git -b develop && \
    mkdir -p /opt/jedi/fv3-bundle/build && \
    cd /opt/jedi/fv3-bundle/build && \
    ecbuild --build=Release ../fv3-bundle && \
    make -j4 && \
    chmod -R 777 /opt/jedi/fv3-bundle && \
    rm /root/.ssh/github_academy_rsa

COPY ./hello_world_mpi.c /root/jedi/hello_world_mpi.c

RUN export COMPILERVARS_ARCHITECTURE=intel64 && \
    . /opt/intel/compilers_and_libraries/linux/bin/compilervars.sh && \
    cd /root/jedi && \
    mpiicc hello_world_mpi.c -o /opt/jedi/bin/hello_world_mpi -lstdc++

FROM ubuntu:18.04 AS runtime

RUN apt-get update -y && \
    DEBIAN_FRONTEND=noninteractive apt-get install -y --no-install-recommends \
        apt-utils \
        build-essential \
        gnupg2 && \
    rm -rf /var/lib/apt/lists/*

RUN apt-key adv --keyserver keyserver.ubuntu.com --recv-keys 6B05F25D762E3157 && \
    apt-get update

RUN apt-get update -y && \
    DEBIAN_FRONTEND=noninteractive apt-get install -y --no-install-recommends \
        bc \
        bison \
        csh \
        curl \
        dirmngr \
        doxygen \
        emacs \
        file \
        flex \
        git \
        git \
        git-flow \
        graphviz \
        ksh \
        less \
        libasound2 \
        libcurl4-openssl-dev \
        libexpat1-dev \
        libgtk2.0-common \
        libncurses-dev \
        libpango-1.0.0 \
        libssl-dev \
        libx11-dev \
        libxml2-dev \
        lsb-release \
        lynx \
        man-db \
        nano \
        nedit \
        openssh-server \
        screen \
        software-properties-common \
        swig \
        tcl \
        tcsh \
        texinfo \
        texlive-latex-recommended \
        tk \
        unzip \
        vim \
        wget \
        wish \
        xserver-xorg && \
    rm -rf /var/lib/apt/lists/*

RUN echo "export PATH=/usr/local/bin:/usr/local/jedi/bin:$PATH" >> /etc/bash.bashrc && \
    echo "export LD_LIBRARY_PATH=/usr/local/lib:/usr/local/jedi/lib:$LD_LIBRARY_PATH" >> /etc/bash.bashrc && \
    echo "export LIBRARY_PATH=/usr/local/lib:/usr/local/jedi/lib:$LIBRARY_PATH" >> /etc/bash.bashrc && \
    echo "source /opt/intel/psxe_runtime_2020/linux/bin/psxevars.sh" >> /etc/bash.bashrc && \
    echo "export PYTHONPATH=/usr/local/lib:$PYTHONPATH" >> /etc/bash.bashrc

RUN apt-get update -y && \
    DEBIAN_FRONTEND=noninteractive apt-get install -y --no-install-recommends \
        apt-transport-https \
        ca-certificates \
        gcc \
        man-db \
        openssh-client && \
    rm -rf /var/lib/apt/lists/*

RUN mkdir -p /root/tmp && \
    cd /root/tmp && \
    wget  https://apt.repos.intel.com/2020/GPG-PUB-KEY-INTEL-PSXE-RUNTIME-2020 && \
    apt-key add GPG-PUB-KEY-INTEL-PSXE-RUNTIME-2020 && \
    rm GPG-PUB-KEY-INTEL-PSXE-RUNTIME-2020 && \
    echo "deb https://apt.repos.intel.com/2020 intel-psxe-runtime main" >> /etc/apt/sources.list.d/hpccm.list && \
    apt-get update -y && \
    DEBIAN_FRONTEND=noninteractive apt-get install -y --no-install-recommends aptitude && \
    aptitude install -y --without-recommends -o Aptitude::ProblemResolver::SolutionCost='100*canceled-actions,200*removals' intel-icc-runtime=2020.0-8 intel-ifort-runtime=2020.0-8 intel-mkl-runtime=2020.0-8 intel-mpi-runtime=2020.0-8 && \
    rm -rf /var/lib/apt/lists/*

ENV CLASSPATH=/opt/intel/psxe_runtime_2020.0.8/linux/daal/lib/daal.jar:/opt/intel/psxe_runtime_2020.0.8/linux/mpi/intel64/lib/mpi.jar \
    CPATH=/opt/intel/psxe_runtime_2020.0.8/linux/daal/include:/opt/intel/psxe_runtime_2020.0.8/linux/mkl/include:/opt/intel/psxe_runtime_2020.0.8/linux/tbb/include:/opt/intel/psxe_runtime_2020.0.8/linux/ipp/include:/usr/local/xpmem/include:/usr/local/knem/include: \
    DAALROOT=/opt/intel/psxe_runtime_2020.0.8/linux/daal \
    FI_PROVIDER_PATH=/opt/intel/psxe_runtime_2020.0.8/linux/mpi/intel64/libfabric/lib/prov \
    IPPROOT=/opt/intel/psxe_runtime_2020.0.8/linux/ipp \
    I_MPI_ROOT=/opt/intel/psxe_runtime_2020.0.8/linux/mpi \
    LD_LIBRARY_PATH=/opt/intel/psxe_runtime_2020.0.8/linux/daal/lib/intel64_lin:/opt/intel/psxe_runtime_2020.0.8/linux/compiler/lib/intel64_lin:/opt/intel/psxe_runtime_2020.0.8/linux/mkl/lib/intel64_lin:/opt/intel/psxe_runtime_2020.0.8/linux/tbb/lib/intel64/gcc4.8:/opt/intel/psxe_runtime_2020.0.8/linux/ipp/lib/intel64:/opt/intel/psxe_runtime_2020.0.8/linux/ipp/../tbb/lib/intel64/gcc4.8:/opt/intel/psxe_runtime_2020.0.8/linux/mpi/intel64/libfabric/lib:/opt/intel/psxe_runtime_2020.0.8/linux/mpi/intel64/lib/release:/opt/intel/psxe_runtime_2020.0.8/linux/mpi/intel64/lib:/opt/intel/psxe_runtime_2020.0.8/linux/compiler/lib/intel64_lin:/usr/local/lib:/usr/local/ucx/lib:/usr/local/xpmem/lib: \
    LIBRARY_PATH=/opt/intel/psxe_runtime_2020.0.8/linux/daal/lib/intel64_lin:/opt/intel/psxe_runtime_2020.0.8/linux/compiler/lib/intel64_lin:/opt/intel/psxe_runtime_2020.0.8/linux/mkl/lib/intel64_lin:/opt/intel/psxe_runtime_2020.0.8/linux/tbb/lib/intel64/gcc4.8:/opt/intel/psxe_runtime_2020.0.8/linux/ipp/lib/intel64:/opt/intel/psxe_runtime_2020.0.8/linux/ipp/../tbb/lib/intel64/gcc4.8:/opt/intel/psxe_runtime_2020.0.8/linux/ipp/lib/intel64:/opt/intel/psxe_runtime_2020.0.8/linux/ipp/../tbb/lib/intel64/gcc4.8:/opt/intel/psxe_runtime_2020.0.8/linux/mpi/intel64/libfabric/lib:/opt/intel/psxe_runtime_2020.0.8/linux/mpi/intel64/lib/release:/opt/intel/psxe_runtime_2020.0.8/linux/mpi/intel64/lib:/opt/intel/psxe_runtime_2020.0.8/linux/compiler/lib/intel64_lin:/usr/local/lib:/usr/local/ucx/lib:/usr/local/xpmem/lib: \
    MANPATH=/opt/intel/psxe_runtime_2020.0.8/linux/mpi/man:/usr/local/man:/usr/local/share/man:/usr/share/man \
    MIC_LD_LIBRARY_PATH=/opt/intel/psxe_runtime_2020.0.8/linux/compiler/lib/intel64_lin_mic \
    MKLROOT=/opt/intel/psxe_runtime_2020.0.8/linux/mkl \
    PATH=/opt/intel/psxe_runtime_2020.0.8/linux/mpi/intel64/libfabric/bin:/opt/intel/psxe_runtime_2020.0.8/linux/mpi/intel64/bin:/opt/intel/psxe_runtime_2020.0.8/linux/bin:/usr/local/bin:/usr/local/ucx/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin \
    PKG_CONFIG_PATH=/opt/intel/psxe_runtime_2020.0.8/linux/mkl/bin/pkgconfig \
    PYTHONPATH=/usr/local/lib: \
    TBBROOT=/opt/intel/psxe_runtime_2020.0.8/linux/tbb

COPY --from=build /opt/jedi /opt/jedi
